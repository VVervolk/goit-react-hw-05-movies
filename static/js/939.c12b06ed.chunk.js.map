{"version":3,"file":"static/js/939.c12b06ed.chunk.js","mappings":"gMAEaA,EAAMC,EAAAA,EAAAA,GAAH,8JAQHC,EAAOD,EAAAA,EAAAA,EAAH,oG,SCRF,SAASE,EAAT,GAA4B,IAAZC,EAAW,EAAXA,QACrBC,EAA6BD,EAA7BC,KAAMC,EAAuBF,EAAvBE,MAAOC,EAAgBH,EAAhBG,YACrB,OACE,UAACP,EAAD,YACE,gBACEQ,IACED,EAAW,yCAC2BA,GAClC,kCAENE,IAAKH,GAASD,KAEhB,SAACH,EAAD,UAAOI,GAASD,MAGrB,C,6ICdYK,EAAQT,EAAAA,EAAAA,GAAH,8EAKLU,EAAOV,EAAAA,EAAAA,GAAH,4EAMJW,GAAQX,EAAAA,EAAAA,GAAOY,EAAAA,GAAPZ,CAAH,oDAIMA,EAAAA,EAAAA,GAAH,2E,+ICXN,SAASa,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KASA,OAPAC,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAI,MACZC,EAAAA,EAAAA,GAAS,oBACNC,MAAK,SAAAC,GAAQ,OAAIN,EAAUM,EAASC,QAAvB,IACbC,OAAM,SAAAC,GAAG,OAAIP,QAAQQ,MAAMD,EAAlB,GACb,GAAE,KAGD,2BACE,UAAC,IAAD,YACE,SAAC,KAAD,8BACA,SAAC,KAAD,UACGV,EAAOY,KAAI,YAAuC,IAApCC,EAAmC,EAAnCA,GAAI1B,EAA+B,EAA/BA,KAAME,EAAyB,EAAzBA,YAAaD,EAAY,EAAZA,MACpC,OACE,SAAC,KAAD,CAAgB0B,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMnB,GAApD,UACE,SAACZ,EAAA,EAAD,CAAMC,QAAS,CAAEC,KAAAA,EAAMC,MAAAA,EAAOC,YAAAA,MADpBwB,EAIf,UAKV,C,sDClCD,IAAM3B,EAAU,CACd+B,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIS,SAASf,EAASgB,GAC/B,OAAOC,MAAM,gCAAD,OAAiCD,GAAWnC,GAASoB,MAC/D,SAAAC,GACE,IAAKA,EAASgB,GACZ,MAAM,IAAIC,MAAM,cAElB,OAAOjB,EAASkB,MACjB,GAEJ,C","sources":["modules/components/Item/Item.styled.js","modules/components/Item/Item.jsx","modules/components/others/List.styled.js","pages/Home.jsx","services/fetchAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Box = styled.li`\n  padding: 12px 16px;\n  border-radius: 12px;\n  align-self: stretch;\n  min-height: 430px;\n  background-color: var(--white-color);\n`;\n\nexport const Name = styled.p`\n  text-align: center;\n  margin-top: 12px;\n  color: var(--main-bg-color);\n`;\n","import { Box, Name } from './Item.styled';\n\nexport default function Item({ options }) {\n  const { name, title, poster_path } = options;\n  return (\n    <Box>\n      <img\n        src={\n          poster_path\n            ? `https://image.tmdb.org/t/p/w500${poster_path}`\n            : 'https://i.imgur.com/Z2MYNbj.png'\n        }\n        alt={title || name}\n      />\n      <Name>{title || name}</Name>\n    </Box>\n  );\n}\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Title = styled.h2`\n  color: var(--white-color);\n  margin-bottom: 20px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 20px;\n  flex-wrap: wrap;\n`;\n\nexport const Movie = styled(Link)`\n  width: calc(25% - 15px);\n`;\n\nexport const LoadMore = styled.ul`\n  display: flex;\n  gap: 20px;\n  flex-wrap: wrap;\n`;\n","import Item from 'modules/components/Item';\nimport { useLocation } from 'react-router-dom';\nimport fetchAPI from 'services/fetchAPI';\nimport { useEffect, useState } from 'react';\nimport { List, Movie, Title } from 'modules/components/others/List.styled';\nimport { Container } from 'modules/components/others/Container.styled';\n\nexport default function Home() {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    console.log('1');\n    fetchAPI('trending/all/day')\n      .then(response => setMovies(response.results))\n      .catch(err => console.error(err));\n  }, []);\n\n  return (\n    <main>\n      <Container>\n        <Title>Trending today</Title>\n        <List>\n          {movies.map(({ id, name, poster_path, title }) => {\n            return (\n              <Movie key={id} to={`/movies/${id}`} state={{ from: location }}>\n                <Item options={{ name, title, poster_path }}></Item>\n              </Movie>\n            );\n          })}\n        </List>\n      </Container>\n    </main>\n  );\n}\n","const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkYTY1YjgzZTRlMDY1MGU2ZTJlNzU2YTY3MjVmNTg0OCIsInN1YiI6IjY0OTNlZWNiY2ZlNDhmMDBhY2ExNzBkMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.wcGxTBKfsLd3h8YX0sgQK0DmVDuLuYq0pCCHV9Po96o',\n  },\n};\n\nexport default function fetchAPI(request) {\n  return fetch(`https://api.themoviedb.org/3/${request}`, options).then(\n    response => {\n      if (!response.ok) {\n        throw new Error('Error load');\n      }\n      return response.json();\n    }\n  );\n}\n"],"names":["Box","styled","Name","Item","options","name","title","poster_path","src","alt","Title","List","Movie","Link","Home","location","useLocation","useState","movies","setMovies","useEffect","console","log","fetchAPI","then","response","results","catch","err","error","map","id","to","state","from","method","headers","accept","Authorization","request","fetch","ok","Error","json"],"sourceRoot":""}