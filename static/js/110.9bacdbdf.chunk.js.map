{"version":3,"file":"static/js/110.9bacdbdf.chunk.js","mappings":"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","sources":["modules/components/Item/Item.styled.js","modules/components/Item/Item.jsx","modules/components/MovieDetails/MovieDetails.styled.js","modules/components/others/List.styled.js","modules/components/others/Form.styled.js","pages/Movies.jsx","services/fetchAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Box = styled.li`\n  padding: 12px 16px;\n  border-radius: 12px;\n  align-self: stretch;\n  min-height: 430px;\n  background-color: var(--white-color);\n`;\n\nexport const Name = styled.p`\n  text-align: center;\n  margin-top: 12px;\n  color: var(--main-bg-color);\n`;\n","import { Box, Name } from './Item.styled';\n\nexport default function Item({ options }) {\n  const { name, title, poster_path } = options;\n  return (\n    <Box>\n      <img\n        src={\n          poster_path\n            ? `https://image.tmdb.org/t/p/w500${poster_path}`\n            : 'https://i.imgur.com/Z2MYNbj.png'\n        }\n        alt={title || name}\n      />\n      <Name>{title || name}</Name>\n    </Box>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  background-color: var(--turquoise-color);\n  border-radius: 12px;\n  border-width: 0;\n  margin-bottom: 12px;\n`;\n\nexport const DetailsBox = styled.div`\n  background-color: var(--white-color);\n  padding: 16px 20px;\n  border-radius: 12px;\n  color: var(--main-bg-color);\n`;\n\nexport const InfoBox = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const ImageBox = styled.div`\n  max-width: 200px;\n`;\n\nexport const SubTitle = styled.h3`\n  margin-top: 16px;\n`;\n\nexport const AdditionalBox = styled.div`\n  margin: 20px 0;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const AdditionalList = styled.ul`\n  display: flex;\n  gap: 12px;\n`;\n\nexport const AdditionalLink = styled.li`\n  background-color: var(--turquoise-color);\n  padding: 4px 8px;\n  border-radius: 12px;\n\n  &:hover,\n  &:focus {\n    color: var(--white-color);\n  }\n`;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Title = styled.h2`\n  color: var(--white-color);\n  margin-bottom: 20px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 20px;\n  flex-wrap: wrap;\n`;\n\nexport const Movie = styled(Link)`\n  width: calc(25% - 15px);\n`;\n\nexport const LoadMore = styled.ul`\n  display: flex;\n  gap: 20px;\n  flex-wrap: wrap;\n`;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: inline-flex;\n  justify-content: center;\n  gap: 12px;\n  background-color: var(--white-color);\n  padding: 16px 20px;\n  border-radius: 12px;\n  color: var(--main-bg-color);\n  margin-bottom: 12px;\n\n  & Button {\n    margin-bottom: 0;\n  }\n`;\n\nexport const LoadMoreButton = styled.button`\n  display: block;\n  background-color: var(--turquoise-color);\n  border-radius: 12px;\n  border-width: 0;\n  margin: 16px auto 0;\n  padding: 8px 12px;\n  cursor: pointer;\n`;\n","import { useEffect, useRef, useState } from 'react';\nimport fetchAPI from 'services/fetchAPI';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport Item from 'modules/components/Item/Item';\nimport { Button } from 'modules/components/MovieDetails/MovieDetails.styled';\nimport { Form, LoadMoreButton } from 'modules/components/others/Form.styled';\nimport { Container } from 'modules/components/others/Container.styled';\nimport { List, Movie } from 'modules/components/others/List.styled';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const name = searchParams.get('name');\n  const page = Number(searchParams.get('page'));\n  const location = useLocation();\n  const first = useRef(true);\n  const shouldRenderList = location.search && movies;\n\n  useEffect(() => {\n    if (!name) {\n      return;\n    }\n\n    fetchAPI(`search/movie?query=${name}&page=${page}`).then(response => {\n      if (first.current) {\n        setMovies(response.results);\n        first.current = false;\n        return;\n      } else {\n        setMovies(s => [...s, ...response.results]);\n        return;\n      }\n    });\n  }, [name, page]);\n\n  return (\n    <main>\n      <Container>\n        <Form\n          onSubmit={evt => {\n            const value = evt.currentTarget.elements.movie.value;\n            evt.preventDefault();\n            first.current = true;\n            setSearchParams({ name: value, page: 1 });\n            evt.currentTarget.reset();\n          }}\n        >\n          <input type=\"text\" name=\"movie\" />\n          <Button type=\"submit\">Search</Button>\n        </Form>\n        {shouldRenderList && (\n          <>\n            <List>\n              {movies.map(({ id, name, poster_path, title }) => (\n                <Movie key={id} to={`/movies/${id}`} state={{ from: location }}>\n                  <Item options={{ name, title, poster_path }}></Item>\n                </Movie>\n              ))}\n            </List>\n            <LoadMoreButton\n              type=\"button\"\n              onClick={() => {\n                setSearchParams({ name, page: page + 1 });\n              }}\n            >\n              Load more\n            </LoadMoreButton>\n          </>\n        )}\n      </Container>\n    </main>\n  );\n}\n","const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkYTY1YjgzZTRlMDY1MGU2ZTJlNzU2YTY3MjVmNTg0OCIsInN1YiI6IjY0OTNlZWNiY2ZlNDhmMDBhY2ExNzBkMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.wcGxTBKfsLd3h8YX0sgQK0DmVDuLuYq0pCCHV9Po96o',\n  },\n};\n\nexport default function fetchAPI(request) {\n  return fetch(`https://api.themoviedb.org/3/${request}`, options).then(\n    response => {\n      if (!response.ok) {\n        throw new Error('Error load');\n      }\n      return response.json();\n    }\n  );\n}\n"],"names":["Box","styled","Name","Item","options","name","title","poster_path","src","alt","Button","DetailsBox","InfoBox","ImageBox","SubTitle","AdditionalBox","AdditionalList","AdditionalLink","Title","List","Movie","Link","Form","LoadMoreButton","Movies","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","page","Number","location","useLocation","first","useRef","shouldRenderList","search","useEffect","fetchAPI","then","response","current","results","s","onSubmit","evt","value","currentTarget","elements","movie","preventDefault","reset","type","map","id","to","state","from","onClick","method","headers","accept","Authorization","request","fetch","ok","Error","json"],"sourceRoot":""}