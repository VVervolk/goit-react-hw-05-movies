{"version":3,"file":"static/js/896.cef2aeb5.chunk.js","mappings":"mPAEaA,EAAWC,EAAAA,EAAAA,GAAH,qGAORC,EAAWD,EAAAA,EAAAA,GAAH,4FAKRE,EAAYF,EAAAA,EAAAA,IAAH,8C,SCTP,SAASG,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KAOA,OALAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAS,SAAD,OAAUN,EAAV,aACLO,MAAK,SAAAC,GAAQ,OAAIJ,EAAQI,EAASL,KAArB,IACbM,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,GACb,GAAE,CAACV,KAEF,8BACGG,IACC,SAACR,EAAD,UACGQ,EAAKU,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,aAAcC,EAAvB,EAAuBA,GAAvB,OACR,UAACnB,EAAD,YACE,SAACC,EAAD,CACEmB,IACEF,EAAY,yCAC0BA,GAClC,sEAENG,IAAKJ,KAEP,uBAAIA,MATSE,EADP,OAiBnB,C,sDCnCD,IAAMG,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIS,SAASjB,EAASkB,GAC/B,OAAOC,MAAM,gCAAD,OAAiCD,GAAWL,GAASZ,MAC/D,SAAAC,GACE,IAAKA,EAASkB,GACZ,MAAM,IAAIC,MAAM,cAElB,OAAOnB,EAASoB,MACjB,GAEJ,C","sources":["modules/components/Cast/Cast.styled.js","modules/components/Cast/Cast.jsx","services/fetchAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  align-items: stretch;\n`;\n\nexport const CastItem = styled.li`\n  flex-basis: calc((100% - (7 * 20px)) / 8);\n  min-height: 190px;\n`;\n\nexport const CastImage = styled.img`\n  min-height: 190px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport fetchAPI from 'services/fetchAPI';\nimport { CastImage, CastItem, CastList } from './Cast.styled';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState();\n\n  useEffect(() => {\n    fetchAPI(`movie/${movieId}/credits`)\n      .then(response => setCast(response.cast))\n      .catch(err => console.error(err));\n  }, [movieId]);\n  return (\n    <>\n      {cast && (\n        <CastList>\n          {cast.map(({ name, profile_path, id }) => (\n            <CastItem key={id}>\n              <CastImage\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                    : 'https://cameronsbms.co.uk/app/uploads/2017/09/placeholder-human.jpg'\n                }\n                alt={name}\n              />\n              <p>{name}</p>\n            </CastItem>\n          ))}\n        </CastList>\n      )}\n    </>\n  );\n}\n","const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkYTY1YjgzZTRlMDY1MGU2ZTJlNzU2YTY3MjVmNTg0OCIsInN1YiI6IjY0OTNlZWNiY2ZlNDhmMDBhY2ExNzBkMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.wcGxTBKfsLd3h8YX0sgQK0DmVDuLuYq0pCCHV9Po96o',\n  },\n};\n\nexport default function fetchAPI(request) {\n  return fetch(`https://api.themoviedb.org/3/${request}`, options).then(\n    response => {\n      if (!response.ok) {\n        throw new Error('Error load');\n      }\n      return response.json();\n    }\n  );\n}\n"],"names":["CastList","styled","CastItem","CastImage","Cast","movieId","useParams","useState","cast","setCast","useEffect","fetchAPI","then","response","catch","err","console","error","map","name","profile_path","id","src","alt","options","method","headers","accept","Authorization","request","fetch","ok","Error","json"],"sourceRoot":""}