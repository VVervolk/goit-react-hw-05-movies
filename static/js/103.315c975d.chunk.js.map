{"version":3,"file":"static/js/103.315c975d.chunk.js","mappings":"qXAEaA,EAASC,EAAAA,EAAAA,OAAH,yIAONC,EAAaD,EAAAA,EAAAA,IAAH,gJAOVE,EAAUF,EAAAA,EAAAA,IAAH,wDAKPG,EAAWH,EAAAA,EAAAA,IAAH,6CAIRI,EAAWJ,EAAAA,EAAAA,GAAH,6CAIRK,EAAgBL,EAAAA,EAAAA,IAAH,qGAObM,EAAiBN,EAAAA,EAAAA,GAAH,wDAKdO,EAAiBP,EAAAA,EAAAA,GAAH,iL,8IC1BZ,SAASQ,IAAgB,IAAD,IAC/BC,GAAWC,EAAAA,EAAAA,MAETC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,YAA1B,eAAOC,EAAP,KAAcC,EAAd,KAWA,OATAC,EAAAA,EAAAA,YAAU,WACJF,IAGJG,EAAAA,EAAAA,GAAS,SAAD,OAAUN,IACfO,MAAK,SAAAC,GAAQ,OAAIJ,EAASI,EAAb,IACbC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,GACb,GAAE,CAACP,EAAOH,KAGT,2BACE,UAAC,IAAD,YACE,SAAC,KAAD,CAAMa,GAAE,oBAAEf,EAASgB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAKD,MAAO,CAAEC,KAAMjB,GAAtD,UACE,SAAC,KAAD,CAAQkB,KAAK,SAAb,oCAEDb,IACC,UAAC,KAAD,YACE,UAAC,KAAD,YACE,SAAC,KAAD,WACE,gBACEc,IACEd,EAAMe,YAAN,yCACsCf,EAAMe,aACxC,kCAENC,IAAKhB,EAAMiB,OAASjB,EAAMkB,UAG9B,4BACE,wBAAKlB,EAAMiB,OAASjB,EAAMkB,QAC1B,wCAAgBlB,EAAMmB,aAAtB,QACA,SAAC,KAAD,wBACA,uBAAInB,EAAMoB,YACV,SAAC,KAAD,sBACA,uBACGpB,EAAMqB,OAAOC,KAAI,WAAWC,EAAKF,GAAY,IAAzBH,EAAwB,EAAxBA,KACnB,OAAIG,EAAOG,OAAS,IAAMD,EACjBL,EAEH,GAAN,OAAUA,EAAV,KACD,aAIP,UAAC,KAAD,YACE,oDACA,UAAC,KAAD,YACE,SAAC,KAAD,WACE,SAAC,KAAD,CAAMR,GAAI,OAAV,qBAEF,SAAC,KAAD,WACE,SAAC,KAAD,CAAMA,GAAI,UAAV,8BAIN,SAAC,KAAD,WAMX,C,sDClFD,IAAMe,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIS,SAAS1B,EAAS2B,GAC/B,OAAOC,MAAM,gCAAD,OAAiCD,GAAWL,GAASrB,MAC/D,SAAAC,GACE,IAAKA,EAAS2B,GACZ,MAAM,IAAIC,MAAM,cAElB,OAAO5B,EAAS6B,MACjB,GAEJ,C","sources":["modules/components/MovieDetails/MovieDetails.styled.js","modules/components/MovieDetails/MovieDetails.jsx","services/fetchAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  background-color: var(--turquoise-color);\n  border-radius: 12px;\n  border-width: 0;\n  margin-bottom: 12px;\n`;\n\nexport const DetailsBox = styled.div`\n  background-color: var(--white-color);\n  padding: 16px 20px;\n  border-radius: 12px;\n  color: var(--main-bg-color);\n`;\n\nexport const InfoBox = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const ImageBox = styled.div`\n  max-width: 200px;\n`;\n\nexport const SubTitle = styled.h3`\n  margin-top: 16px;\n`;\n\nexport const AdditionalBox = styled.div`\n  margin: 20px 0;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const AdditionalList = styled.ul`\n  display: flex;\n  gap: 12px;\n`;\n\nexport const AdditionalLink = styled.li`\n  background-color: var(--turquoise-color);\n  padding: 4px 8px;\n  border-radius: 12px;\n\n  &:hover,\n  &:focus {\n    color: var(--white-color);\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport fetchAPI from 'services/fetchAPI';\nimport { Container } from '../others/Container.styled';\nimport {\n  AdditionalBox,\n  AdditionalLink,\n  AdditionalList,\n  Button,\n  DetailsBox,\n  ImageBox,\n  InfoBox,\n  SubTitle,\n} from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const location = useLocation();\n\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState();\n\n  useEffect(() => {\n    if (movie) {\n      return;\n    }\n    fetchAPI(`movie/${movieId}`)\n      .then(response => setMovie(response))\n      .catch(err => console.error(err));\n  }, [movie, movieId]);\n\n  return (\n    <main>\n      <Container>\n        <Link to={location.state?.from ?? '/'} state={{ from: location }}>\n          <Button type=\"button\">&#129044; Go back</Button>\n        </Link>\n        {movie && (\n          <DetailsBox>\n            <InfoBox>\n              <ImageBox>\n                <img\n                  src={\n                    movie.poster_path\n                      ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                      : 'https://i.imgur.com/Z2MYNbj.png'\n                  }\n                  alt={movie.title || movie.name}\n                />\n              </ImageBox>\n              <div>\n                <h2>{movie.title || movie.name}</h2>\n                <p>User score: {movie.vote_average} </p>\n                <SubTitle>Overview</SubTitle>\n                <p>{movie.overview}</p>\n                <SubTitle>Genres</SubTitle>\n                <p>\n                  {movie.genres.map(({ name }, idx, genres) => {\n                    if (genres.length - 1 === idx) {\n                      return name;\n                    }\n                    return `${name}, `;\n                  })}\n                </p>\n              </div>\n            </InfoBox>\n            <AdditionalBox>\n              <h5>Additional information</h5>\n              <AdditionalList>\n                <AdditionalLink>\n                  <Link to={'cast'}>Cast</Link>\n                </AdditionalLink>\n                <AdditionalLink>\n                  <Link to={'reviews'}>Reviews</Link>\n                </AdditionalLink>\n              </AdditionalList>\n            </AdditionalBox>\n            <Outlet />\n          </DetailsBox>\n        )}\n      </Container>\n    </main>\n  );\n}\n","const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkYTY1YjgzZTRlMDY1MGU2ZTJlNzU2YTY3MjVmNTg0OCIsInN1YiI6IjY0OTNlZWNiY2ZlNDhmMDBhY2ExNzBkMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.wcGxTBKfsLd3h8YX0sgQK0DmVDuLuYq0pCCHV9Po96o',\n  },\n};\n\nexport default function fetchAPI(request) {\n  return fetch(`https://api.themoviedb.org/3/${request}`, options).then(\n    response => {\n      if (!response.ok) {\n        throw new Error('Error load');\n      }\n      return response.json();\n    }\n  );\n}\n"],"names":["Button","styled","DetailsBox","InfoBox","ImageBox","SubTitle","AdditionalBox","AdditionalList","AdditionalLink","MovieDetails","location","useLocation","movieId","useParams","useState","movie","setMovie","useEffect","fetchAPI","then","response","catch","err","console","error","to","state","from","type","src","poster_path","alt","title","name","vote_average","overview","genres","map","idx","length","options","method","headers","accept","Authorization","request","fetch","ok","Error","json"],"sourceRoot":""}